# Utopian Tree
The Utopian Tree goes through 2 cycles of growth every year. Each spring, it doubles in height. Each summer, its height increases by 1 meter.
A Utopian Tree sapling with a height of 1 meter is planted at the onset of spring. How tall will the tree be after "n" growth cycles?

For example, if the number of growth cycles is n = 5, the calculations are as follows:
Period  Height
0          1
1          2
2          3
3          6
4          7
5          14

# Function Description
UtopianTree has the following parameter(s):
int n: the number of growth cycles to simulate

# Returns
int: the height of the tree after the given number of cycles

# Constraints
0 <= n <= 60


# Solution
Since the upper constraint of 'n' is <= 60, so I think it is alright to loop through 1 to n to solve this problem.
The initial height of the tree sapling is given to be 1 meter. So we can initialize the value of height as 1.
During the first cycle, the height doubles.
During the second cycle, the height increases by 1.
A cycle of odd number will always fall under the first cycle while a cycle of even number will always fall under the second cycle.

So loop from i = 1 to n:
1. if i is odd, height = 2 * height.
2. if i is even, height = height + 1.

# Implementation
function utopianTree(n) {
    let height = 1;
    for(let i = 1; i <= n; i++) {
        if(i % 2 != 0) {   // if the current cycle is an odd number
            height = 2 * height;
        } else {
            height += 1;
        }
    }
    return height;
}
