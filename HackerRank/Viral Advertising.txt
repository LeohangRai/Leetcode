# Viral advertising
HackerLand Enterprise is adopting a new viral advertising strategy. When they launch a new product, they advertise it to exactly 5 people on social media.

On the first day, half of those 5 people (i.e., floor(5/2) = 2) like the advertisement and each shares it with 3 of their friends. At the beginning of the second day, floor(5/2) * 3 = 2 * 3 = 6 people receive the advertisement.

Each day, floor(recipients/2) of the recipients like the advertisement and will share it with  friends on the following day. Assuming nobody receives the advertisement twice, determine how many people have liked the ad by the end of a given day, beginning with launch day as day 1.

# Example
n = 5.

Day Shared  Liked  Cumulative
1      5     			2        		2
2      6     			3       		5
3      9     			4       		9
4     12     		6      		15
5     18     		9      		24
The progression is shown above. The cumulative number of likes on the 54h day is 24.

# Function Description
viralAdvertising has the following parameter(s):
int n: the day number to report

# Returns
int: the cumulative likes at that day

Constraints:
1 <= n <= 50


# Solution
On the first day 5 people receive the advertisement, so initialize a variable 'shared' = 5.
We are only concerned with the number of likes tho.
Each day, the number of people who will see the advertisement will be floor(previousNumber / 2).
Acc. to the question, every day after the first day, half of the people who received the advertisement will like it and recommend it to 3 of their own friends.
This means, every next day, the number of people who will receive the advertisement will be numOfPeopleWhoLikeTheAd * 3.

# Implementation
function viralAdvertising(n) {
    let shared = 5;
    let dailyLikes = 0;
    let cumulativeLikes = 0;

    for(let i = 1; i <= n ; i++) {
        dailyLikes = Math.floor(shared / 2);
        shared = dailyLikes * 3;
        cumulativeLikes += dailyLikes;
    }
    return cumulativeLikes;
}
