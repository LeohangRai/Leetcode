# Merge two sorted linked lists
Given pointers to the heads of two sorted linked lists, merge them into a single, sorted linked list. Either head pointer may be null meaning that the corresponding list is empty.


# Example
headA refers to 1 -> 3 -> 7 -> NULL
headB refers to 1 -> 2 -> NULL
The new list is 1 -> 1 -> 2 -> 3 -> 7 -> NULL


# Function Description
mergeLists has the following parameters:
- SinglyLinkedListNode pointer headA: a reference to the head of a list
- SinglyLinkedListNode pointer headB: a reference to the head of a list

# Returns
SinglyLinkedListNode pointer: a reference to the head of the merged list



Compare the values of head1.data and head2.data

function mergeLists(head1, head2) {
	let maxLen 
}



