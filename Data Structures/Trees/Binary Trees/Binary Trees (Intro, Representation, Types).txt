# Binary Tree
A binary tree is a tree data structure of degree 0, 1 or 2, which means, each node in the tree can have at most 2 children. That is, each node can have either 0, 1 or 2 nodes.

Each node of a binary tree consists of the following three items:
1. data
2. address of the left child
3. address of the right child


# Binary Tree Representation
struct Node {
	int data;
	struct node *left;
	struct node *right;
};

Python:
class Node:
	def __init__(self, key):
		self.data = key
		self.left = None
		self.right = None


# Types of Binary Tree
1. Full Binary Tree
A full binary tree is a special type of binary tree in which every parent node or internal node has either 2 or 0 children.
It is also known as a Proper Binary Tree.


2. Perfect Binary Tree
A perfect binary tree is a type of binary tree in which every internal node has exactly 2 child nodes and all the leaf nodes are at the same level.

			30
         /      \
       /          \
     15             50
   /   \	       /   \
 10    20   40    60    80
 


3. Complete Binary Tree
NOTE: the elements are filled from left to right in complete binary tree
A complete binary tree is just like a full binary tree, but with two major differences:
- every level must be completely filled
- all the leaf nodes must lean towards left
- the last leaf element might not have a right sibling, i.e. a complete binary tree doesn't havet to be a full binary tree.

#IMPORTANT NOTE: (Easy way to remember the meaning of Complete Binary Tree)
Complete binary trees can be represented in an array because they are filled from left to right. 
So, if we represent a complete binary tree in an array, there will not be any holes.
Maybe this is the reason why they are known as Complete Binary Trees, since they complete an array.
More on this on the Complete Binary Tree explanation file.

			30
         /      \
       /          \
     15             50
   /   \	       /  
 10    20   40    60    



4. Degenerate or Pathological Tree
A degenerate or Pathological tree is a tree with nodes having only a single child, either left or right.

    1
   /
   2
    \
     3
    /
   4


5. Skewed Binary Tree
A skewed binary tree is a degenerate/pathological tree in which the tree is either dominated by the left nodes or the right nodes.
Thus, there are 2 types of Skewed Binary trees:
- Left-skewed Binary Tree
- Right-skewed Binary Tree


      1        1
     /          \
    2            2 
   /              \
  3                3 


6. Balanced Binary Tree (Height-balanced Binary Tree)
It is a type of binary tree in which the difference between the height of the left and the right sub-tree for each node is either 0 or 1.



