# Negative Lookahead (Assertions)
Syntax:
regex_1(?!regex_2)
The negative lookahead (?!) asserts regex_1 not to be immediately followed by regex_2.
Lookahead is excluded from the match (do not consume matches of regex_2), but only assert whether a match is possible or not.

Example:
Regex: c(?!o)
Test String: chocolate

Here, the regex will match the 'c' that is not followed by an 'o'.
This means, the regex will match the first c of 'chocolate'.

# Question
You have a test String S.
Write a regex which can match all characters which are not immediately followed by that same character.

# Example
If S = goooo, then regex should match "g" and the last "o". Because the first "g" is not follwed by another "g" and the last "o" is not followed by another "o".

# Solution
var Regex_Pattern = /(\S)(?!\1)/g;	//Do not delete `/` and `/g`.

# Analysis:
Since the first character in the string can be any character, we are specifying it to be "\S", i.e. any non-space character.
Then, in the negative lookahead part, we just need to specify that, whatever was matched in the first capture group not be repeated as the subsequent character.
i.e (?!\1)
